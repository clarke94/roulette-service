{
  "swagger": "2.0",
  "info": {
    "title": "Roulette Service",
    "description": "A micro-service that provides a REST API for roulette games.",
    "version": "0.1.0"
  },
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/table": {
      "post": {
        "summary": "Create table",
        "description": "Create a new roulette table that has a minimum and maximum bet.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "table",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "maximumBet",
                "minimumBet",
                "currency"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "A human readable name for the table"
                },
                "maximumBet": {
                  "type": "integer",
                  "minimum": 10,
                  "description": "Maximum bets allowed on this table in the smallest currency unit. The maximum bet must be greater than 10 and minimumBet."
                },
                "minimumBet": {
                  "type": "integer",
                  "minimum": 10,
                  "description": "Minimum bets allowed on this table in the smallest currency unit. The maximum bet must be greater than 10."
                },
                "currency": {
                  "type": "string",
                  "description": "Table currency code that all bets are placed in.",
                  "enum": ["GBP", "USD", "EUR"]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Table ID",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List tables",
        "description": "An array of tables that are found",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Table ID",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "description": "Human readable table name"
                  },
                  "maximumBet": {
                    "type": "integer",
                    "description": "Maximum bet that can be placed on this table"
                  },
                  "minimumBet": {
                    "type": "integer",
                    "description": "Minimum bet that can be placed on this table"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Table currency code that all bets are placed in.",
                    "enum": ["GBP", "USD", "EUR"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update table",
        "description": "Update an existing roulette table that has a minimum and maximum bet.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "table",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "maximumBet",
                "minimumBet",
                "currency"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Table ID",
                  "format": "uuid"
                },
                "name": {
                  "type": "string",
                  "description": "A human readable name for the table"
                },
                "maximumBet": {
                  "type": "integer",
                  "minimum": 10,
                  "description": "Maximum bets allowed on this table in the smallest currency unit. The maximum bet must be greater than 10 and minimumBet."
                },
                "minimumBet": {
                  "type": "integer",
                  "minimum": 10,
                  "description": "Minimum bets allowed on this table in the smallest currency unit. The maximum bet must be greater than 10."
                },
                "currency": {
                  "type": "string",
                  "description": "Table currency code that all bets are placed in.",
                  "enum": ["GBP", "USD", "EUR"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Table ID",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      }
    },
    "/table/{table}": {
      "delete": {
        "summary": "Delete table",
        "description": "Delete an existing roulette table by table ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "table",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Deleted table ID",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      }
    },
    "/table/{table}/bet": {
      "post": {
        "summary": "Create Bet",
        "description": "Create a bet for a given table",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "table",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "bet",
            "schema": {
              "type": "object",
              "required": [
                "bet",
                "type",
                "amount",
                "currency"
              ],
              "properties": {
                "bet": {
                  "type": "string",
                  "description": "The bet that is placed. The bet placed will be validated against the bet type. \n #### red/black \n Bet on a red number or black number. \n #### straight \n Bet on a single number from 0 to 36"
                },
                "type": {
                  "type": "string",
                  "description": "The type of bet that is placed.",
                  "enum": [
                    "red/black",
                    "straight"
                  ]
                },
                "amount": {
                  "type": "integer",
                  "description": "Placed bet in the smallest currency unit."
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the amount provided",
                  "enum": ["GBP", "USD", "EUR"]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Bet ID",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List bets",
        "description": "An array of bets that are found for a given table",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "table",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Table ID",
                    "format": "uuid"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "Placed bet in the smallest currency unit."
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency of the amount provided",
                    "enum": ["GBP", "USD", "EUR"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update bet",
        "description": "Update an existing bet on a table.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "table",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "table",
            "schema": {
              "type": "object",
              "required": [
                "id",
                "bet",
                "type",
                "amount",
                "currency"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Bet ID",
                  "format": "uuid"
                },
                "bet": {
                  "type": "string",
                  "description": "The bet that is placed. The bet placed will be validated against the bet type. \n #### red/black \n Bet on a red number or black number. \n #### straight \n Bet on a single number from 0 to 36"
                },
                "type": {
                  "type": "string",
                  "description": "The type of bet that is placed.",
                  "enum": [
                    "red/black",
                    "straight"
                  ]
                },
                "amount": {
                  "type": "integer",
                  "description": "Placed bet in the smallest currency unit."
                },
                "currency": {
                  "type": "string",
                  "description": "Currency of the amount provided",
                  "enum": ["GBP", "USD", "EUR"]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Bet ID",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      }
    },
    "/table/{table}/bet/{bet}": {
      "delete": {
        "summary": "Delete bet",
        "description": "Delete an existing bet by bet ID for a given table",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "table",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "bet",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Deleted bet ID",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      }
    },
    "/table/{table}/play": {
      "post": {
        "summary": "Play Roulette",
        "description": "Play a round of roulette where the roulette result is generated, the table is cleared of all bets and the winners are listed in the response.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "table",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "number": {
                  "type": "integer",
                  "description": "Winning number the roulette ball landed on"
                },
                "color": {
                  "type": "string",
                  "description": "The color the roulette ball landed on",
                  "enum": ["red", "black", "green"]
                },
                "winners": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "betId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The Bet ID that won"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The prize money"
                      },
                      "currency": {
                        "type": "string",
                        "description": "prize money currency",
                        "enum": ["GBP", "EUR", "USD"]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Request error"
                }
              }
            }
          }
        }
      }
    }
  }
}
